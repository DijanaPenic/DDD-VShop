// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using NodaTime;
using VShop.Modules.Sales.Infrastructure.DAL;

#nullable disable

namespace VShop.Modules.Sales.Infrastructure.DAL.Migrations.Sales
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20211209212955_ChangedDatetimeColumnsTypeAndName")]
    partial class ChangedDatetimeColumnsTypeAndName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VShop.Modules.Sales.Infrastructure.Entities.ShoppingCartInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<Instant>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<Instant>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_shopping_cart_info");

                    b.ToTable("shopping_cart_info", "shopping_cart");
                });

            modelBuilder.Entity("VShop.Modules.Sales.Infrastructure.Entities.ShoppingCartInfoItem", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<Instant>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<Instant>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ShoppingCartInfoId")
                        .HasColumnType("uuid")
                        .HasColumnName("shopping_cart_info_id");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("unit_price");

                    b.HasKey("ProductId")
                        .HasName("pk_shopping_cart_info_product_item");

                    b.HasIndex("ShoppingCartInfoId")
                        .HasDatabaseName("ix_shopping_cart_info_product_item_shopping_cart_info_id");

                    b.ToTable("shopping_cart_info_product_item", "shopping_cart");
                });

            modelBuilder.Entity("VShop.Modules.Sales.Infrastructure.Entities.ShoppingCartInfoItem", b =>
                {
                    b.HasOne("VShop.Modules.Sales.Infrastructure.Entities.ShoppingCartInfo", "ShoppingCartInfo")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shopping_cart_info_product_item_shopping_cart_info_shopping");

                    b.Navigation("ShoppingCartInfo");
                });

            modelBuilder.Entity("VShop.Modules.Sales.Infrastructure.Entities.ShoppingCartInfo", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
